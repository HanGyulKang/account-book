buildscript {
    ext {
        // querydsl version 추가
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.1'
    // querydsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // test시에도 query dsl 모델을 사용하기 위해서는 해당 옵션을 추가 해줘야 한다.
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.security:spring-security-test'

    // Query 로그 ?에 넘어온 Parameter를 직접 찍어서 보여주는 외부 라이브러리 : 성능 검증을 반드시 거친 후 사용해야 함
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    // jwt token 생성 library
    implementation 'com.auth0:java-jwt:4.2.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.keycloak:keycloak-core:18.0.0'

    // querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 추가 시작(gradle version 5.0 이상)
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
// querydsl 추가 끝